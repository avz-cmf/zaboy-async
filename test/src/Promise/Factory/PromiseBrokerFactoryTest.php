<?php

namespace zaboy\test\async\Promise\Factory\Broker;

use zaboy\async\Promise\Store;
use zaboy\async\Promise\Factory\Adapter\MySqlAdapterFactory;
use zaboy\async\Promise\Factory\BrokerFactory;
use zaboy\async\Promise\Factory\StoreFactory;
use zaboy\async\Promise\Broker;
use Interop\Container\ContainerInterface;
use zaboy\rest\TableGateway\TableManagerMysql;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-29 at 18:23:51.
 */
class BrokerFactoryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var BrokerFactory
     */
    protected $object;

    /**
     * @var ContainerInterface
     */
    protected $container;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->container = include './config/container.php';

        $this->object = new BrokerFactory();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        /* @var $store Store */
        $store = $this->container->get(StoreFactory::KEY);
        $tableName = $store->table;
        /* @var $tableManagerMysql TableManagerMysql */
        $tableManagerMysql = $this->container->get(TableManagerMysql::KEY_IN_CONFIG);
        $tableManagerMysql->deleteTable($tableName);
    }

    public function test__invoke()
    {
        $promiseBroker = $this->object->createService($this->container);
        $this->assertInstanceOf(
                Broker::class, $promiseBroker
        );
    }

}
