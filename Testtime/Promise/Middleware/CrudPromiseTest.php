<?php

namespace zaboy\test\async\Promise\Factory\Middleware;

use zaboy\async\Promise\Factory\Adapter\MySqlAdapterFactory;
use zaboy\async\Promise\Factory\BrokerFactory;
use Interop\Container\ContainerInterface;
use zaboy\rest\TableGateway\TableManagerMysql;
use zaboy\async\Promise\Middleware\CrudPromise;
use zaboy\async\Promise\Factory\Middleware\CrudPromiseFactory;
use zaboy\rest\DataStore\HttpClient;
use zaboy\async\Promise\Promise;
use zaboy\async\Promise\Storer;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-29 at 18:23:51.
 */
class CrudPromiseTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var \zaboy\rest\DataStore\HttpClient
     */
    protected $object;

    /**
     * @var Storer
     */
    protected $adapter;

    /**
     * @var ContainerInterface
     */
    protected $container;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->container = include './config/container.php';
        $this->object = $this->container->get('test_rest_middleware_datastore');
        $this->adapter = $this->container->get(MySqlAdapterFactory::KEY_PROMISE_ADAPTER);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function test__makePromise()
    {

        $promiseData = $this->object->create([]);
        $promise = new Promise($this->adapter, $promiseData[Storer::PROMISE_ID]);
        $this->assertInstanceOf(
                'zaboy\async\Promise\Promise', $promise
        );
    }

}
